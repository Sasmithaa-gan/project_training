@model project1.Models.basic

@{
    ViewBag.Title = "basic";
    Layout = "~/Views/Shared/sidebar.cshtml";
    
}
<html>
<head>
    <style>
        .form-horizontal {
            padding-left: 30%;
        }
        .button {
            background-color: royalblue;
            border: none;
            color: white;
            padding: 15px 32px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
        }
    </style>

</head>

<body>
    <h2 style="color:black" align="center"><b>Basic Details</b></h2>
    <br />
    @using (Html.BeginForm("basic", "Register", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">

                @Html.LabelFor(model => model.empid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.empid, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.empid, "", new { @class = "text-danger" })
                </div>


            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.empname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.empname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.empname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.emptype, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("emptype", new List<SelectListItem>
                    { new SelectListItem{Text="On-Role",Value="On-Role"},
                        new SelectListItem{Text="Off-Role",Value="Off-Role"} },
                        "Select Employee Type", new { @class = "form-control" })

                    @*@Html.EditorFor(model => model.securityquestion, new { htmlAttributes = new { @class = "form-control" } })*@

                    @Html.ValidationMessageFor(model => model.emptype, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.deptid, "deptid", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.deptid, new { htmlAttributes = new { @class = "form-control" } })
                    @*@Html.DropDownList("depid", new List<SelectListItem>
                        { new SelectListItem{Text="101",Value="101"},
                            new SelectListItem{Text="102",Value="102"},
                            new SelectListItem{Text="103",Value="103"} ,
                            new SelectListItem{Text="104",Value="104"}},

                            "Select department id", new { @class = "form-control" })*@
                    @Html.ValidationMessageFor(model => model.deptid, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.dob, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.dob, new { htmlAttributes = new { @class = "form-control", @placeholder = "yyyy-MM-dd" } })
                    @Html.ValidationMessageFor(model => model.dob, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.mobile, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.mobile, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.dateofjoin, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.dateofjoin, new { htmlAttributes = new { @class = "form-control", @placeholder = "yyyy-MM-dd" } })
                    @Html.ValidationMessageFor(model => model.dateofjoin, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.RadioButtonFor(Model => Model.gender, "Male")
                    Male
                    @Html.RadioButtonFor(Model => Model.gender, "Female")
                    Female
                    @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.emp_photo_path, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="ImageFile" required />
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Next" class="button" />
                </div>
            </div>
        </div>
    }

    @*<div>
            @Html.ActionLink("Back to List", "Index")
        </div>*@
</body>
</html>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

