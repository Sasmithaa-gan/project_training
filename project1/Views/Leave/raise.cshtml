@model project1.Models.raise

@{
    ViewBag.Title = "raise";
    Layout = "~/Views/Shared/sidebar.cshtml";
}

<html>
<head>
    <script type="text/javascript">
        function showMessage()
        {
            alert("Raised Query Successfully");
        }
    </script>
    <style>
        .form-horizontal {
            padding-left: 30%;
        }
        .button {
            background-color: royalblue;
            border: none;
            color: white;
            padding: 15px 32px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
        }
    </style>

</head>
<body style="background-image: url('https://lh3.googleusercontent.com/proxy/Q0TT8YF7II0FrY-O3T5mzmgdXdmtxZXekyhwVjWhmU8pfJ8Gz5JJb3Qh9dQT-sMnrqWaDLu4kBJQmKRfZ57FD0Lb81o83iJjNoHk-4FMriGfuwrndn4dVqSZ5Yn85OV6ESolykYeMdW3fqW3-ceFRS0uZ3YXUqs9Fa9ZlISzD1dgF0sbmYJkTaPCYi2yKoTU0gImpgB_FSFYwXXQ46F9LqnQS9fyXvhrp3A');background-size:cover">
    <h2 style="color:black" align="center"><b>Query Application</b></h2>
    <br />
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.empid, "empid", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.empid, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.empid, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.curloc, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.curloc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.curloc, "", new { @class = "text-danger" })
                    </div>
                </div>*@
            <div class="form-group">
                @Html.LabelFor(model => model.curloc, "Current Location", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("curloc", new List<SelectListItem>
                   {/*new SelectListItem{Text="---Type---",Value="---type---",Selected=true},*/
                   new SelectListItem{Text="Base office",Value="Base office" },
                    new SelectListItem{Text="other KGS office",Value="Other KGS office" },
                     new SelectListItem{Text="Work from home",Value="Work from home" },
                      new SelectListItem{Text="Out of country",Value="out of country" },
                       new SelectListItem{Text="Client location",Value="Client location" } },
                       "Select Current Location", new { @class = "form-control" })

                </div>
            </div>


            @*<div class="form-group">
                    @Html.LabelFor(model => model.precontim, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.precontim, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.precontim, "", new { @class = "text-danger" })
                    </div>
                </div>*@
            <div class="form-group">
                @Html.LabelFor(model => model.precontim, "Preferred contact timing", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("precontim", new List<SelectListItem>
                        {/*new SelectListItem{Text="---Type---",Value="---type---",Selected=true},*/
                        new SelectListItem{Text="any time",Value="Any time" },
                        new SelectListItem{Text="08.00-12.00 hrs",Value="08.00-12.00 hrs" },
                        new SelectListItem{Text="12.00-16.00 hrs",Value="12.00-16.00 hrs" },
                         new SelectListItem{Text="16.00-20.00 hrs",Value="16.00-20.00 hrs" },
                          new SelectListItem{Text="20.00-00.00 hrs",Value="20.00-00.00 hrs" },
                           new SelectListItem{Text="00.00-04.00 hrs",Value="00.00-04.00 hrs" },
                            new SelectListItem{Text="04.00-08.00 hrs",Value="04.00-08.00 hrs" } },
                            "Select Preferred contact timing", new { @class = "form-control" })

                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.shortdes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.shortdes, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.shortdes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.des, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.des, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.des, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="button" />
                </div>
            </div>
        </div>
    }
</body>
</html>
@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
